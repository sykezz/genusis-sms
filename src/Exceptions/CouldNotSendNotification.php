<?php

namespace Sykez\GenusisSms\Exceptions;

use Exception;
use Illuminate\Support\Facades\Log;

class CouldNotSendNotification extends Exception
{
    static protected $response_codes = [
        'success' => 'We have received your SMS request',
        'account_disabled' => 'Account has been disabled',
        'account_expired' => 'Account has been expired',
        'bad_senderid' => 'Sender ID that contains sensitive words',
        'insufficient_balance' => 'Account balance is not sufficient to send SMS',
        'invalid_account' => 'Invalid account',
        'invalid_action' => 'Unrecognized action',
        'invalid_apitype' => 'The API type is not JSON, XML or HTTP GET POST',
        'invalid_auth' => 'Authentication failed',
        'invalid_dateschedule' => 'Date schedule format must be yyyy-mm-dd HH:ii:ss',
        'invalid_domain' => 'Unrecognized domain',
        'invalid_frequency' => 'Invalid frequency type',
        'invalid_key' => 'Key sent by client does not match with the key generated by system',
        'invalid_length' => 'Message content has exceeded maximum length',
        'invalid_media' => 'Unsupported media type',
        'media_exceeded' => 'Only 5 media array is allowed in the digital media',
        'monthly_limit_exceeded' => 'User monthly usage has exceeded the monthly limit',
        'no_credit' => 'Account balance is zero',
        'no_recipient' => 'No valid recipients to be sent out. It could be due to invalid MSISDN, invalid message content or system cannot find valid recipients to be processed',
        'no_pricetag' => 'No price tag in message content',
        'no_privilege' => 'Only client and his reseller can check account status',
        'postpaid_limit_exceeded' => 'Client has exceeded the postpaid limit',
        'recipient_exceeded' => 'Exceed 100,000 recipients in total in the same media type',
        'record_not_found' => 'Record cannot be found in the system',
        'weekly_limit_exceeded' => 'User weekly usage has exceeded the weekly limit',
        'wrong_number' => 'Invalid destination address',
        'failed' => 'System failure. Please provide the log to support team for checking purpose',
        'blank' => 'Response empty response. Pleasae verify the request or provide the log to support team for checking purpose'
    ];

    /**
     * @return static
     */
    public static function gensuiteRespondedWithAnError($exception, ?array $log)
    {
        $message = $exception->getMessage();

        if ($log) {
            $log['exception'] = $exception;
            Log::error("SMS failed", $log);
        }

        if (in_array($message, array_keys(self::$response_codes))) {
            return new static(self::$response_codes[$message] . " [{$message}]");
        }

        return new static($message);
    }
}
